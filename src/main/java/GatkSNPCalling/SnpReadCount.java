package GatkSNPCalling;

import org.apache.log4j.Logger;

import java.io.*;

public class SnpReadCount {
    private String refGenomeFilePath, bamFile, gatk;
    private String gatkSnpFile, selectVariantFile, outputSnpReadFile;
    private Logger logger;

    /**
     *
     * @param refGenomeFilePath reference genome fasta file
     * @param bamFile bam file generate by STAR
     * @param gatk gatk executive file
     * @param gatkSnpFile SNP sites which are called by GATK
     */
    public SnpReadCount(String refGenomeFilePath, String bamFile, String gatk, String gatkSnpFile, Logger logger) {
        this.refGenomeFilePath = refGenomeFilePath;
        this.bamFile = bamFile;
        this.gatk = gatk;
        this.gatkSnpFile = gatkSnpFile;
        this.selectVariantFile = bamFile.substring(0, bamFile.lastIndexOf("_"))+"Select.vcf";
        this.outputSnpReadFile = bamFile.substring(0, bamFile.lastIndexOf("_"))+"ReadsCount.txt";
        this.logger = logger;
    }

    /**
     * use gatk tool get snp reads count
     */
    public void snpReads() {
        this.selectVcf();
        this.countRead();
    }

    /**
     * use gatk ASEReadCounter get reads count for each RNA-Seq snp, the input file is sorted bam file which is generated by STAR
     */
    private void countRead() {

        String cmd = this.gatk + " ASEReadCounter -I " + this.bamFile + " -V " + this.selectVariantFile + " -R " + this.refGenomeFilePath
                + " --output " + this.outputSnpReadFile;
        this.logger.debug("SNP reads counting");
        
        try {
            Process p =  Runtime.getRuntime().exec(cmd);
            int exitVal = p.waitFor();
            if (exitVal != 0) {
                this.logger.error("failed to get ASE reads count");
                System.exit(2);
            }
        } catch (IOException | InterruptedException ie) {
            ie.printStackTrace();
            System.exit(2);
        }
    }

    /**
     * use gatk SelectVariants to filter RNA-Seq snp for further reads count
     */
    private void selectVcf() {
        String cmd = this.gatk + " SelectVariants -R " + this.refGenomeFilePath + " -V " + this.gatkSnpFile + " -O " +
                this.selectVariantFile +" --restrict-alleles-to BIALLELIC";
        this.logger.debug("restrict biallelic variants");

        try {
            Process p =  Runtime.getRuntime().exec(cmd);
            int exitVal = p.waitFor();
            if (exitVal != 0) {
                this.logger.error("failed to select variant site");
                System.exit(2);
            }
        } catch (IOException | InterruptedException ie) {
            ie.printStackTrace();
            System.exit(2);
        }
    }
}

